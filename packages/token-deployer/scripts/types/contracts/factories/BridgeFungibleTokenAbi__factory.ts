/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.70.0
  Forc version: 0.48.1
  Fuel-Core version: 0.22.0
*/

import { Interface, Contract, ContractFactory } from "fuels";
import type { Provider, Account, AbstractAddress, BytesLike, DeployContractOptions, StorageSlot } from "fuels";
import type { BridgeFungibleTokenAbi, BridgeFungibleTokenAbiInterface } from "../BridgeFungibleTokenAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "enum BridgeFungibleTokenError",
      "components": [
        {
          "name": "UnauthorizedSender",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "IncorrectAssetDeposited",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "NoCoinsSent",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "NoRefundAvailable",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "OverflowError",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "UnderflowError",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "AssetNotFound",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 15,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum Metadata",
      "components": [
        {
          "name": "B256",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "Bytes",
          "type": 13,
          "typeArguments": null
        },
        {
          "name": "Int",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "String",
          "type": 19,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 7,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        7
      ]
    },
    {
      "typeId": 6,
      "type": "enum ReentrancyError",
      "components": [
        {
          "name": "NonReentrant",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "raw untyped ptr",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "str[32]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "str[64]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 12,
      "type": "struct AssetId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "struct Bytes",
      "components": [
        {
          "name": "buf",
          "type": 17,
          "typeArguments": null
        },
        {
          "name": "len",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 14,
      "type": "struct ClaimRefundEvent",
      "components": [
        {
          "name": "amount",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "from",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "token_address",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "token_id",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 15,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 16,
      "type": "struct DepositEvent",
      "components": [
        {
          "name": "amount",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "from",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "to",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 17,
      "type": "struct RawBytes",
      "components": [
        {
          "name": "ptr",
          "type": 8,
          "typeArguments": null
        },
        {
          "name": "cap",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 18,
      "type": "struct RefundRegisteredEvent",
      "components": [
        {
          "name": "amount",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "token_address",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "token_id",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "from",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 19,
      "type": "struct String",
      "components": [
        {
          "name": "bytes",
          "type": 13,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 20,
      "type": "struct WithdrawalEvent",
      "components": [
        {
          "name": "amount",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "from",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "to",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 21,
      "type": "u64",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 22,
      "type": "u8",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "msg_idx",
          "type": 21,
          "typeArguments": null
        }
      ],
      "name": "process_message",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset_id",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "asset_to_sub_id",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "bridged_token",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [],
      "name": "bridged_token_decimals",
      "output": {
        "name": "",
        "type": 22,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [],
      "name": "bridged_token_gateway",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "from",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "token_address",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "token_id",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "claim_refund",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "register_bridge",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "to",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "withdraw",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "decimals",
      "output": {
        "name": "",
        "type": 5,
        "typeArguments": [
          {
            "name": "",
            "type": 22,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "name",
      "output": {
        "name": "",
        "type": 5,
        "typeArguments": [
          {
            "name": "",
            "type": 19,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "symbol",
      "output": {
        "name": "",
        "type": 5,
        "typeArguments": [
          {
            "name": "",
            "type": 19,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_assets",
      "output": {
        "name": "",
        "type": 21,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "total_supply",
      "output": {
        "name": "",
        "type": 5,
        "typeArguments": [
          {
            "name": "",
            "type": 21,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "_key",
          "type": 19,
          "typeArguments": null
        }
      ],
      "name": "metadata",
      "output": {
        "name": "",
        "type": 5,
        "typeArguments": [
          {
            "name": "",
            "type": 4,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 6,
        "typeArguments": []
      }
    },
    {
      "logId": 1,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 2,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 3,
      "loggedType": {
        "name": "",
        "type": 18,
        "typeArguments": []
      }
    },
    {
      "logId": 4,
      "loggedType": {
        "name": "",
        "type": 18,
        "typeArguments": []
      }
    },
    {
      "logId": 5,
      "loggedType": {
        "name": "",
        "type": 18,
        "typeArguments": []
      }
    },
    {
      "logId": 6,
      "loggedType": {
        "name": "",
        "type": 16,
        "typeArguments": []
      }
    },
    {
      "logId": 7,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 8,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 9,
      "loggedType": {
        "name": "",
        "type": 14,
        "typeArguments": []
      }
    },
    {
      "logId": 10,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 11,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 12,
      "loggedType": {
        "name": "",
        "type": 20,
        "typeArguments": []
      }
    },
    {
      "logId": 13,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "DECIMALS",
      "configurableType": {
        "name": "",
        "type": 22,
        "typeArguments": null
      },
      "offset": 31668
    },
    {
      "name": "BRIDGED_TOKEN_DECIMALS",
      "configurableType": {
        "name": "",
        "type": 22,
        "typeArguments": null
      },
      "offset": 31660
    },
    {
      "name": "BRIDGED_TOKEN_GATEWAY",
      "configurableType": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "offset": 31548
    },
    {
      "name": "BRIDGED_TOKEN",
      "configurableType": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "offset": 31628
    },
    {
      "name": "NAME",
      "configurableType": {
        "name": "",
        "type": 10,
        "typeArguments": null
      },
      "offset": 31940
    },
    {
      "name": "SYMBOL",
      "configurableType": {
        "name": "",
        "type": 9,
        "typeArguments": null
      },
      "offset": 32004
    }
  ]
};

const _storageSlots: StorageSlot[] = [
  {
    "key": "02dac99c283f16bc91b74f6942db7f012699a2ad51272b15207b9cc14a70dbae",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class BridgeFungibleTokenAbi__factory {
  static readonly abi = _abi;

  static readonly storageSlots = _storageSlots;

  static createInterface(): BridgeFungibleTokenAbiInterface {
    return new Interface(_abi) as unknown as BridgeFungibleTokenAbiInterface
  }

  static connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): BridgeFungibleTokenAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as BridgeFungibleTokenAbi
  }

  static async deployContract(
    bytecode: BytesLike,
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<BridgeFungibleTokenAbi> {
    const factory = new ContractFactory(bytecode, _abi, wallet);

    const { storageSlots } = BridgeFungibleTokenAbi__factory;

    const contract = await factory.deployContract({
      storageSlots,
      ...options,
    });

    return contract as unknown as BridgeFungibleTokenAbi;
  }
}
